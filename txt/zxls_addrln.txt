zxls_addrln:--zxls_addrln  要和z_addr_ln01的格式一致
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @workerno nvarchar(max) = [1]
	declare @worker nvarchar(max) = [2]
	declare @filename nvarchar(max) = [3]
	--------------------------------------------------------------------------------------
	declare @tmp table(
		sel int identity(1,1)
		,product nvarchar(50)
		,noa nvarchar(20)
		,noq nvarchar(10)
		,datea nvarchar(20)
		,typea nvarchar(20)
		,custunit nvarchar(20)
		,custno nvarchar(20)
		,cust nvarchar(50)
		,custprice float
		,tggprice float
		,salesno nvarchar(20)
		,sales nvarchar(50)
		,driverprice float
		,memo nvarchar(max)
	)

	declare @bbm table(
		sel int identity(1,1)
		,noa nvarchar(20)
		,straddrno nvarchar(20)
		,straddr nvarchar(50)
		,endaddrno nvarchar(20)
		,endaddr nvarchar(50)		
		,productno nvarchar(20)
		,product nvarchar(50)
	)
	declare @bbs table(
		sel int identity(1,1)
		,noa nvarchar(20)
		,noq nvarchar(10)
		,datea nvarchar(20)
		,typea nvarchar(20)
		,custunit nvarchar(20)
		,custno nvarchar(20)
		,cust nvarchar(50)
		,custprice float
		,tggprice float
		,salesno nvarchar(20)
		,sales nvarchar(50)
		,driverprice float
		,memo nvarchar(max)
	)
	declare @a nvarchar(max)
	declare @b nvarchar(max)
	declare @c nvarchar(max)
	declare @d nvarchar(max)
	declare @e nvarchar(max)
	declare @f nvarchar(max)
	declare @g nvarchar(max)
	declare @h nvarchar(max)
	declare @i nvarchar(max)
	declare @j nvarchar(max)
	declare @k nvarchar(max)
	declare @l nvarchar(max)
	declare @m nvarchar(max)
	declare @n nvarchar(max)
	declare @o nvarchar(max)
	
	declare @date nvarchar(max)
	
	declare cursor_table cursor for
	select ltrim(rtrim(a)),ltrim(rtrim(b)),ltrim(rtrim(c)),ltrim(rtrim(d)),ltrim(rtrim(e))
		,ltrim(rtrim(f)),ltrim(rtrim(g)),ltrim(rtrim(h)),ltrim(rtrim(i)),ltrim(rtrim(j)),ltrim(rtrim(k))
		,ltrim(rtrim(l)),ltrim(rtrim(m)),ltrim(rtrim(n)),ltrim(rtrim(o))
		from ztmpxls order by CAST(noa as int)
	open cursor_table
	fetch next from cursor_table
	into @a,@b,@c,@d,@e,@f,@g,@h,@i,@j,@k,@l,@m,@n,@o
	while(@@FETCH_STATUS <> -1)
	begin
		begin try	
			if(@a='起迄')
			begin
				insert into @bbm(noa,straddrno,straddr,endaddrno,endaddr,productno,product)
				select @b noa,@c straddrno,replace(@d,N'＇',"'") straddr
					,@e endaddrno,replace(@f,N'＇',"'") endaddr,@g productno,@h product
			end
			else if(@a='費率')
			begin
				set @date = ''
				while(len(@e)>0)
				begin
					if LEFT(@e,1) like '[0-9,/]' 
						set @date = @date + LEFT(@e,1)
					set @e = SUBSTRING(@e,2,len(@e))
				end
					
				insert into @tmp(product,noa,noq,datea,typea,custunit,custno,cust,custprice,tggprice,salesno,sales,driverprice,memo)
				select @c product,@b noa,@d noq,@date datea,@f typea
					,replace(@g,N'＇',"'") custunit,@h custno,replace(@i,N'＇',"'") cust,@j custprice,@k tggprice
					,@l salesno,replace(@m,N'＇',"'") sales,@n driverprice,replace(@o,N'＇',"'") memo
			
			
				if(len(@a)>0)
				begin
					set @date = ''
					while(len(@b)>0)
					begin
						if LEFT(@b,1) like '[0-9,/]' 
							set @date = @date + LEFT(@b,1)
						set @b = SUBSTRING(@b,2,len(@b))
					end
				end
			end
		end try
		begin catch 
			--nothing
		end catch

		fetch next from cursor_table
		into @a,@b,@c,@d,@e,@f,@g,@h,@i,@j,@k,@l,@m,@n,@o
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------
	-- update data
	-- 有錯誤就放棄
	Begin Transaction [Trans_Name]
	begin try
		--刪除資料
		delete addr 
		from addr a
		left join (select noa from @tmp group by noa) b on a.noa=b.noa
		where b.noa is not null
		delete addrs 
		from addrs a
		left join (select noa from @tmp group by noa) b on a.noa=b.noa
		where b.noa is not null
		
		delete addr 
		from addr a
		left join @bbm b on a.noa=b.noa
		where b.noa is not null
		
		delete addrs
		from addrs a
		left join @bbm b on a.noa=b.noa
		where b.noa is not null
		--新增資料
		insert into addr(noa,addr)
		select noa,product from @tmp group by noa,product
		
		insert into addrs(noa,noq,datea,typea,custunit,custno,cust,custprice,tggprice,salesno,sales,driverprice,memo)
		select noa,noq,datea,typea,custunit,custno,cust,custprice,tggprice,salesno,sales,driverprice,memo from @tmp
		
		insert into addr(noa,straddrno,straddr,endaddrno,endaddr,productno,product)
		select a.noa,a.straddrno,a.straddr,a.endaddrno,a.endaddr,a.productno,b.product
		from @bbm a
		left join (select noa,product from @tmp group by noa,product) b on a.productno=b.noa
		
		insert into addrs(noa,noq,datea,typea,custunit,custno,cust,custprice,tggprice,salesno,sales,driverprice,memo)
		select b.noa,a.noq,a.datea,a.typea,a.custunit,a.custno,a.cust,a.custprice,a.tggprice
			,a.salesno,a.sales,a.driverprice,a.memo
		from @tmp a
		left join @bbm b on a.noa=b.productno
		where b.noa is not null
		Commit Transaction [Trans_Name] -- 提交所有操作所造成的變更
	end try
	begin catch
		Rollback Transaction [Trans_Name] -- 復原所有操作所造成的變更
		select ERROR_MESSAGE()
	end catch;